geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(name = "Water Year", values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 0, override.aes = list(linetype = "dashed", color = "red")))
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day')
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day')
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day')+
theme(legend.position = "none")
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day')+
theme(legend.position = "none")
q_ave_xts <- xts(q_lower$avg, order.by = q$waterDay)
q_ave_xts <- xts(q_lower$avg, order.by = q$Date)
q_ave_xts <- xts(q_lower$avg, order.by = q$waterDay)
str(q_lower)
# Assuming waterDay corresponds to days in the year 2002, adjust accordingly
dates <- as.Date(paste("2002-01-01", q_lower$waterDay, sep = "-"))
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the year 2002, adjust accordingly
dates <- as.Date(paste("2002-01-01", q_lower$waterDay, sep = "-"))
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the year 2002, adjust accordingly
dates <- as.Date(q_lower$waterDay)
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the year 2002, adjust accordingly
dates <- as.Date(q_lower$waterDay)
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
ggplot(q_annual, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggplot(q_annual, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("10-01")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date(paste("2001", "10-01", sep = "-"))
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date(paste("2001", "10-01", sep = "-"))
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)") %>%
dyOptions(axisLabelFormatter = "function(d) { return Dygraph.dateAxisLabelFormatter(new Date(d * 86400000), '%m-%d'); }")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date(paste("2001", "10-01", sep = "-"))
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)") %>%
dyAxis("x", label = "Date", axisLabelFormatter = "function(d) { return Dygraph.dateAxisLabelFormatter(new Date(d * 86400000), '%m-%d'); }")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date(paste("2001", "10-01", sep = "-"))
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)") %>%
dyAxis("x", label = "Date", axisLabelFormatter = "function(d) { return Dygraph.dateAxisLabelFormatter(d, '%m-%d'); }")
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)") %>%
dyAxis("x", label = "Date", axisLabelFormatter = "function(d) { return Dygraph.dateAxisLabelFormatter(d, '%m-%d'); }")
water_year_start_date <- as.Date(paste("2001", "10-01", sep = "-"))
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)") %>%
dyAxis("x", label = "Date") %>%
dyCallbacks(
drawCallback = "function(dygraph, initial) {
var labels = [];
var ticks = dygraph.xAxisRange();
for (var i = ticks[0]; i <= ticks[1]; i++) {
var date = new Date(i * 86400000);
labels.push(date.getMonth() + 1 + '-' + date.getDate());
}
return labels;
}"
)
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date(paste("2001", "10-01", sep = "-"))
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)") %>%
dyAxis("x", label = "Date") %>%
dyCallbacks(
drawCallback = "function(dygraph, initial) {
var labels = [];
var ticks = dygraph.xAxisRange();
for (var i = ticks[0]; i <= ticks[1]; i++) {
var date = new Date(i * 86400000);
labels.push(date.getMonth() + 1 + '-' + date.getDate());
}
return labels;
}"
)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(dataRetrieval)
library(dygraphs)
library(xts)
library(revealjs)
library(snotelr)
library(riem)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(dataRetrieval)
library(lubridate)
library(sf)
library(ggthemes)
library(xts)
library(dygraphs)
library(scales)
library(openair)
library(plotly)
library(SciViews)
knitr::opts_chunk$set(message = F,
warning = F,
cache = T)
knitr::opts_chunk$set(echo = TRUE)
library(trend)
library(nhdplusTools)
library(lfstat)
library(ggpubr)
library(kableExtra)
#Stats
library(forcats)
library(stringr)
library(trend)
# Chunk 2: downloader
q <- readNWISdv(siteNumbers = '09333500',
parameterCd = '00060',
startDate = '2002-01-01',
endDate = '2022-03-20') %>%
rename(q = 'X_00060_00003') %>%
select(-X_00060_00003_cd)
# Chunk 3: Static
ggplot(q, aes(x = Date, y = q)) +
geom_line() +
ylab('Q (cfs)') +
theme_few() +
ggtitle('Discharge For the Dirty Devil River, UT')
# Chunk 4: data plotter
q_xts <- xts(q$q, order.by = q$Date)
dygraph(q_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Chunk 5: March clean
q_january <- q %>%
addWaterYear() %>%
group_by(waterYear)%>%
mutate(waterDay = (as.integer(difftime(Date, ymd(paste0(waterYear - 1 ,'-09-30')), units = "days")))) %>% filter(waterDay >= 93, waterDay <= 151) %>%
group_by(waterDay) %>%
mutate(avg = mean(q))
# Chunk 6: January figure from ChatGPT
# Convert waterYear to factor if it's not already
q_january$waterYear <- factor(q_january$waterYear)
ggplot(q_january, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
scale_x_log10() +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
# Chunk 7: 2005 excluded
# Exclude the data for the year 2005
q_excluded_2005 <- subset(q_january, waterYear != 2005) %>%
mutate(avg = mean(q))
# Plotting excluding the year 2005
ggplot(q_excluded_2005, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
scale_x_log10() +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +  # Remove the legend title for Line Type
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))  # Move the average line up
# Chunk 8: daily average
q_annual <- q %>%
addWaterYear() %>%
group_by(waterYear)%>%
mutate(waterDay = (as.integer(difftime(Date, ymd(paste0(waterYear - 1 ,'-09-30')), units = "days")))) %>% #filter(waterDay >= 93, waterDay <= 151) %>%
group_by(waterDay) %>%
mutate(avg = mean(q))
# Convert waterYear to factor if it's not already
q_annual$waterYear <- factor(q_annual$waterYear)
ggplot(q_annual, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
# Chunk 9: lower flows
q_lower <- q_annual %>%
filter(q < 500)
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
# Chunk 10: lower flows grey
# Convert waterYear to factor if it's not already
q_lower$waterYear <- factor(q_lower$waterYear)
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day')+
theme(legend.position = "none")
# Chunk 11: data plotter average 2
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(dataRetrieval)
library(dygraphs)
library(xts)
library(revealjs)
library(snotelr)
library(riem)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(dataRetrieval)
library(lubridate)
library(sf)
library(ggthemes)
library(xts)
library(dygraphs)
library(scales)
library(openair)
library(plotly)
library(SciViews)
knitr::opts_chunk$set(message = F,
warning = F,
cache = T)
knitr::opts_chunk$set(echo = TRUE)
library(trend)
library(nhdplusTools)
library(lfstat)
library(ggpubr)
library(kableExtra)
#Stats
library(forcats)
library(stringr)
library(trend)
# Chunk 2: downloader
q <- readNWISdv(siteNumbers = '09333500',
parameterCd = '00060',
startDate = '2002-01-01',
endDate = '2022-03-20') %>%
rename(q = 'X_00060_00003') %>%
select(-X_00060_00003_cd)
# Chunk 3: Static
ggplot(q, aes(x = Date, y = q)) +
geom_line() +
ylab('Q (cfs)') +
theme_few() +
ggtitle('Discharge For the Dirty Devil River, UT')
# Chunk 4: data plotter
q_xts <- xts(q$q, order.by = q$Date)
dygraph(q_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
# Chunk 5: March clean
q_january <- q %>%
addWaterYear() %>%
group_by(waterYear)%>%
mutate(waterDay = (as.integer(difftime(Date, ymd(paste0(waterYear - 1 ,'-09-30')), units = "days")))) %>% filter(waterDay >= 93, waterDay <= 151) %>%
group_by(waterDay) %>%
mutate(avg = mean(q))
# Chunk 6: January figure from ChatGPT
# Convert waterYear to factor if it's not already
q_january$waterYear <- factor(q_january$waterYear)
ggplot(q_january, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
scale_x_log10() +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
# Chunk 7: 2005 excluded
# Exclude the data for the year 2005
q_excluded_2005 <- subset(q_january, waterYear != 2005) %>%
mutate(avg = mean(q))
# Plotting excluding the year 2005
ggplot(q_excluded_2005, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
scale_x_log10() +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +  # Remove the legend title for Line Type
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))  # Move the average line up
# Chunk 8: daily average
q_annual <- q %>%
addWaterYear() %>%
group_by(waterYear)%>%
mutate(waterDay = (as.integer(difftime(Date, ymd(paste0(waterYear - 1 ,'-09-30')), units = "days")))) %>% #filter(waterDay >= 93, waterDay <= 151) %>%
group_by(waterDay) %>%
mutate(avg = mean(q))
# Convert waterYear to factor if it's not already
q_annual$waterYear <- factor(q_annual$waterYear)
ggplot(q_annual, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
# Chunk 9: lower flows
q_lower <- q_annual %>%
filter(q < 500)
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_viridis_d(name = "Water Year") +
scale_linetype_manual(name = "", values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day') +
labs(color = "Legend Title") +
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
# Chunk 10: lower flows grey
# Convert waterYear to factor if it's not already
q_lower$waterYear <- factor(q_lower$waterYear)
ggplot(q_lower, aes(x = waterDay, y = q, group = waterYear)) +
geom_line(aes(color = waterYear), size = 1) +
geom_line(aes(x = waterDay, y = avg, linetype = "average"), size = 1, color = "red") +
theme_minimal() +
scale_color_manual(values = rep("grey", nlevels(q_lower$waterYear))) +
scale_linetype_manual(values = "dashed") +
ylab('Q (cfs)') +
xlab('Water Day')+
theme(legend.position = "none")
# Chunk 11: data_plotter_average 2
# Assuming waterDay corresponds to days in the water year starting from October 1
# Adjust accordingly if the water year starts on a different date
water_year_start_date <- as.Date("2001-10-01")
dates <- water_year_start_date + q_lower$waterDay - 1
q_ave_xts <- xts(q_lower$avg, order.by = dates)
dygraph(q_ave_xts) %>%
dyAxis("y", label = "Discharge (cfs)")
